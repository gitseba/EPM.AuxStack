<UserControl x:Class="LogProcessor.Wpf.Views.StrategiesView"
				 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				 xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
				 xmlns:local="clr-namespace:LogProcessor.Wpf.Views"
				 xmlns:converters="clr-namespace:LogProcessor.Wpf.Converters"
				 xmlns:attached="clr-namespace:LogProcessor.Wpf.Attached"
				 mc:Ignorable="d"
				 xmlns:prism="http://prismlibrary.com/"
				 prism:ViewModelLocator.AutoWireViewModel="True">

	<b:Interaction.Triggers>
		<b:EventTrigger EventName="Loaded">
			<b:CallMethodAction TargetObject="{Binding}"
									  MethodName="InitialLoad" />
		</b:EventTrigger>
	</b:Interaction.Triggers>

	<Grid Visibility="{Binding IsVisible, Converter={converters:BooleanIsTrueVisibilityConverter}}">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<StackPanel Grid.Column="0"
						Orientation="Horizontal">
			<ComboBox x:Name="TimeGapCb"
						 ItemsSource="{Binding TimeGapOptions}"
						 SelectedItem="{Binding TimeGapSelectedItem}"
						 Width="100"
						 Style="{StaticResource Cb_BaseStyle}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Path=. , Converter={converters:TimeGapConverter}}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="DropDownClosed">
						<b:InvokeCommandAction Command="{Binding TimeGapChangedCommand}"
													  CommandParameter="{Binding ElementName=TimeGapCb, Path=SelectedItem}" />
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</ComboBox>

			<ComboBox x:Name="MainThreadGapCb"
						 ItemsSource="{Binding MainThreadTimeDifferences}"
						 SelectedItem="{Binding SelectedMainThreadTimeItem}"
						 Width="100"
						 Style="{StaticResource Cb_BaseStyle}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Path=. , Converter={converters:MainThreadGapConverter}}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="DropDownClosed">
						<b:InvokeCommandAction Command="{Binding MainThreadGapSelectionChangedCommand}"
													  CommandParameter="{Binding ElementName=MainThreadGapCb, Path=SelectedItem}" />
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</ComboBox>

			<ComboBox x:Name="LogLevelCb"
						 Margin="2"
						 VerticalAlignment="Center"
						 Style="{StaticResource Cb_BaseStyle}"
						 ItemsSource="{Binding LogLevels}"
						 SelectedItem="{Binding SelectedLogLevel, Mode=TwoWay}"
						 StaysOpenOnEdit="True"
						 IsEditable="False">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<!-- The CheckBox which will trigger the command when its state changes -->
							<CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
										 Visibility="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Converter={converters:BooleanIsTrueVisibilityConverter}}"
										 Command="{Binding DataContext.LogLevelsChangedCommand, RelativeSource={RelativeSource AncestorType=ComboBox}}"
										 CommandParameter="{Binding}" />
							<TextBlock Text="{Binding Content, Converter={converters:LogLevelsConverter}}"
										  Margin="5,0,0,0" />
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<!-- Trigger the command when the dropdown is closed -->
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="DropDownClosed">
						<b:InvokeCommandAction Command="{Binding DropDownClosedCommand}" />
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</ComboBox>
			
		</StackPanel>

		<Grid Grid.Column="1" HorizontalAlignment="Center">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBox Grid.Column="0"
						x:Name="FilterTbox"
						Tag="Filter here..."
						Foreground="Black"
						FontSize="{StaticResource Small}"
						Style="{StaticResource TextBoxStyle}"
						Padding="0"
						Width="420"
						Text="{Binding FilterText}" />
			<Button Grid.Column="1"
					  FontFamily="{StaticResource FontAwesome}"
					  Content="{StaticResource fa-filter}"
					  Style="{StaticResource Btn_IconStyle}"
					  Height="30"
					  Padding="6"
					  Command="{Binding FilterCommand}"
					  CommandParameter="{Binding ElementName=FilterTbox, Path=Text}" />
		</Grid>
	</Grid>
</UserControl>
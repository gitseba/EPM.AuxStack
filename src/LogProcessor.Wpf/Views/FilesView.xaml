<UserControl x:Class="LogProcessor.Wpf.Views.FilesView"
				 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				 mc:Ignorable="d"
				 xmlns:local="clr-namespace:LogProcessor.Wpf.Views"
				 xmlns:components="clr-namespace:LogProcessor.Wpf.Views"
				 xmlns:converters="clr-namespace:LogProcessor.Wpf.Converters"
				 xmlns:attached="clr-namespace:LogProcessor.Wpf.Attached"
				 xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
				 xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
				 xmlns:prism="http://prismlibrary.com/"
				 prism:ViewModelLocator.AutoWireViewModel="True">

	<b:Interaction.Triggers>
		<b:EventTrigger EventName="Loaded">
			<b:CallMethodAction TargetObject="{Binding}"
									  MethodName="InitialLoad" />
		</b:EventTrigger>
	</b:Interaction.Triggers>

	<Grid Margin="0">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid Grid.Column="0"
					VerticalAlignment="Center">
				<Border Background="#202020"
						  Height="36"
						  CornerRadius="4,0,0,0">
					<CheckBox x:Name="CheckAllCbox"
								 BorderThickness="0"
								 Style="{StaticResource Checkbox_BaseStyle}"
								 IsChecked="{Binding IsCheckAll}"
								 Command="{Binding CheckAllCommand}"
								 CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
								 Visibility="{Binding Files.Count, Converter={converters:HasItemsVisibilityConverter}, Mode=OneWay, NotifyOnSourceUpdated=True}"
								 IsEnabled="{Binding IsEnabled, Converter={converters:InverseEnableConverter}}" />
				</Border>
			</Grid>

			<Grid Grid.Column="1">
				<Button Content="Search"
						  BorderThickness="0"
						  Style="{StaticResource Btn_IconStyle}"
						  Template="{StaticResource Btn_IconTemplate}"
						  Tag="{StaticResource fa-folder-open}"
						  Command="{Binding SearchCommand}"
						  attached:IsBusyProperty.Value="{Binding IsLoading}"
						  Visibility="{Binding IsLoading, Converter={converters:BooleanIsNotTrueVisibilityConverter}}"
						  IsEnabled="{Binding IsEnabled, Converter={converters:InverseEnableConverter}}" />

				<Button Style="{StaticResource Btn_IconStyle}"
						  Template="{StaticResource Btn_IconTemplate}"
						  Tag="{StaticResource fa-files-o}"
						  Content="Cancel"
						  Command="{Binding CancelCommand}"
						  attached:IsBusyProperty.Value="{Binding IsLoading}"
						  Visibility="{Binding IsLoading, Converter={converters:BooleanIsTrueVisibilityConverter}}">
					<Button.IsEnabled>
						<MultiBinding Converter="{converters:InverseEnableMultiConverter}">
							<Binding Path="IsLoading" />
							<Binding Path="IsEnabled" />
						</MultiBinding>
					</Button.IsEnabled>
				</Button>
			</Grid>
		</Grid>

		<Grid Grid.Row="1"
				Visibility="{Binding Files.Count, Converter={converters:HasItemsVisibilityConverter}}">
			<StackPanel Grid.Row="2">
				<!-- File count -->
				<TextBlock Margin="2"
							  Padding="2">
				 <Run Text="Files found:" />
				 <Run Text="{Binding Files.Count, FallbackValue=0, Mode=OneWay}"
						FontWeight="Bold" />
				</TextBlock>
			</StackPanel>
		</Grid>

		<DataGrid Grid.Row="2"
					 x:Name="FileDataGrid"
					 ItemsSource="{Binding Files}"
					 AutoGenerateColumns="False"
					 CanUserAddRows="False"
					 HeadersVisibility="Column"
					 RowDetailsVisibilityMode="VisibleWhenSelected"
					 EnableRowVirtualization="True"
					 EnableColumnVirtualization="True"
					 IsEnabled="{Binding IsEnabled, Converter={converters:InverseEnableConverter}}"
					 HorizontalScrollBarVisibility="Disabled"
					 HorizontalAlignment="Stretch">

			<DataGrid.RowStyle>
				<Style TargetType="DataGridRow">
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsEnabled}"
										 Value="False">
							<Setter Property="IsEnabled"
									  Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.RowStyle>

			<b:Interaction.Triggers>
				<b:EventTrigger EventName="SelectionChanged">
					<b:InvokeCommandAction Command="{Binding SelectedCommand}"
												  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectedItem}" />
				</b:EventTrigger>
				<b:EventTrigger EventName="MouseDoubleClick">
					<b:InvokeCommandAction Command="{Binding OpenLocationCommand}"
												  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectedItem}" />
				</b:EventTrigger>
			</b:Interaction.Triggers>

			<DataGrid.Columns>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.HeaderStyle>
						<Style TargetType="{x:Type DataGridColumnHeader}">
							<Setter Property="HorizontalAlignment"
									  Value="Stretch" />
							<Setter Property="HorizontalContentAlignment"
									  Value="Left" />
						</Style>
					</DataGridTemplateColumn.HeaderStyle>
					<DataGridTemplateColumn.Header>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!--Header Text for Index-->
							<TextBlock Grid.Column="0"
										  Text="#"
										  FontWeight="Bold"
										  HorizontalAlignment="Left" />

							<!--Header Text for Files-->
							<TextBlock Grid.Column="1"
										  Text="Files"
										  FontWeight="Bold"
										  HorizontalAlignment="Left" />
						</Grid>
					</DataGridTemplateColumn.Header>

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<!-- Checked File -->
								<CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

								<!-- File Name -->
								<TextBlock Grid.Column="2"
											  Text="{Binding FileModel.Name}"
											  VerticalAlignment="Center"
											  Margin="2,0,0,0" />
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>

		<StackPanel Grid.Row="3"
						Background="LightBlue"
						Visibility="{Binding Files.Count, Converter={converters:HasItemsVisibilityConverter}}">

			<components:MetadataView Metadata="{Binding Metadata}" />
		</StackPanel>

		<Grid Grid.Row="4"
				HorizontalAlignment="Stretch"
				FlowDirection="LeftToRight"
				Visibility="{Binding Files.Count, Converter={converters:HasItemsVisibilityConverter}, Mode=OneWay, NotifyOnSourceUpdated=True}">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<!--Clear action-->
			<Button Grid.Column="1"
					  Style="{StaticResource Btn_IconDangerStyle}"
					  Template="{StaticResource Btn_IconDangerTemplate}"
					  Tag="{StaticResource fa-times}"
					  Content="Clear"
					  Command="{Binding ClearCommand}"
					  IsEnabled="{Binding IsEnabled, Converter={converters:InverseEnableConverter}}" />
		</Grid>
	</Grid>
</UserControl>